#!/usr/bin/perl
#
# POD block.  To view these comments in a formatted fashion, use perldoc or
# any of the other POD utilities to form man-style pages.
#

=head1 NAME

B<gdiff_tests> - This script is used to diff a set of GAUSSIAN log and out
files as part of code testing.

=head1 USAGE

To test the entire set of test jobs in the current directory use the
command line entry:

=over

B<gdiff_tests> [I<options>]

=back

To test only test003 and test006 use the command line entry:

=over

B<gdiff_tests> [I<options>] F<test003.com> F<test006.com>

=back

=head1 SYNOPSIS

This script is used to diff the results of Gaussian testjobs.  All of the
jobs must include the extra-print flag in the route (i.e., "#p").  New
output files (*.log) are diff'd with the saved output files (*.out).
Unimportant differences are skipped over (for example the cpu time) and any
remaining differences are put into the file *.diff1.

By default, the script tests all jobs that have input files of the form
*.com.  If any command line arguments are given, then the script tests
those jobs instead.

=head1 OPTIONS

The available options are:

=over

=item B<-link=l>I<NNNN>

=over

Only print from link number I<NNNN> is compared.  By default all print
generated after the initialization print from Link 1 and before the final
print generated by Link 9999 is compared.  Also, by default, date stamps
and file paths are not compared.

=back

=back

=head1 AUTHOR

=over 2

=item Hrant P. Hratchian

=item Department of Chemistry and Biochemistry

=item University of California, Merced

=item Merced, CA 95343

=item hhratchian@ucmerced.edu

=back

=head1 HISTORY

Latest Modification(s): March 29, 2021.

=cut

#
#   Load arguments.
#
    foreach (@ARGV){
      if(/^-h$/i){
        exec "perldoc gdiff_tests";
      }elsif(/^-link=l(\d+)$/i){
        $do_link = $1;
      }elsif(/^-(.*)/){
        die "\n\nUnknown argument sent to gdiff_tests.pl: $1\n\n";
      }else{
        push(@in_files,$_);
      }
    }
    if(!@in_files){@in_files = glob "*.com *.gjf"};
#
#   Diff the .log and .out.  Note that this diff uses our gau-diff script.
#   
    foreach $current_job (@in_files){
      chomp($current_job);
      $current_job =~ s/\.(com|gjf)//;
      print "Checking $current_job...\n";
      if($do_link){
        system "gau-diff -link=l$do_link $current_job.log $current_job.out > $current_job.diff1";
      }else{
        system "gau-diff $current_job.log $current_job.out > $current_job.diff1";
      }
    }
#
#   Now, go through the *.diff1 files and compile a list of jobs where
#   differences exist.  Then remove the diff files.
#   
    foreach $diff_file (@in_files){
      $diff_file =~ s/\.com//;
      $diff_file .= ".diff1";
      open DIFFFILE,"< $diff_file";
      $temp = undef;
      while(<DIFFFILE>){
        chomp;
        $temp .= $_;
      }
      close DIFFFILE;
      if($temp=~/^\s*$/){
        unlink "$diff_file";
      }else{
        $current_job = $diff_file;
        $current_job =~ s/\.diff1//;
        push(@jobs_with_diffs,$current_job);
      }
    }
#
#   Print out a list of jobs that have differences between *.log and *.out.
#   If none exist, then print a message indicating that no differences were
#   found.
#   
    if(@jobs_with_diffs > 0){
      print "\n\nHere are the files with differences:\n";
      foreach $temp (@jobs_with_diffs){
        print "   $temp\n";
      }
    }else{
      print "\n\nNo differences found in the tests run.\n\n";
    }
#
#   Let the user know that the work is completed.
#
    print "\n\nTesting complete.\n";
